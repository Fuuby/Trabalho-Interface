/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.cesjf.lpiu.interfaces;

import br.cesjf.lpiu.arquivos.ArquivoInCarro;
import br.cesjf.lpiu.arquivos.ArquivoInCarroDono;
import br.cesjf.lpiu.arquivos.ArquivoInPessoa;
import br.cesjf.lpiu.arquivos.ArquivoOutCarro;
import br.cesjf.lpiu.arquivos.ArquivoOutCarroDono;
import br.cesjf.lpiu.arquivos.ArquivoOutPessoa;
import br.cesjf.lpiu.modelo.Automovel;
import br.cesjf.lpiu.modelo.CarroDono;
import br.cesjf.lpiu.modelo.Pessoa;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gustavo
 */
public class CadastroCarroDono extends javax.swing.JFrame {
    
    
    private ArquivoInCarroDono arqin = new ArquivoInCarroDono();
    private ArquivoInPessoa arqin2 = new ArquivoInPessoa();
     private ArquivoInCarro arqin3 = new ArquivoInCarro();
    private CarroDono lig = null;
    int linha;
    private ArquivoOutCarroDono arqout = new ArquivoOutCarroDono();
    private ArquivoOutPessoa arqout2 = new ArquivoOutPessoa();
    private ArquivoOutCarro arqout3 = new ArquivoOutCarro();
    /**
     * Creates new form CadastroCarroDono
     */
    public CadastroCarroDono() {
        initComponents();
        
        lig = new CarroDono();
        
        try {
            arqout.abrir();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CadastroCarroDono.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CadastroCarroDono.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtPessoa = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtCarro = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtLigacao = new javax.swing.JTable();
        btVincular = new javax.swing.JButton();
        btExluir = new javax.swing.JButton();
        txtNome = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRG = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPlaca = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        txtModelo = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jtPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome", "RG", "CPF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPessoa.getTableHeader().setReorderingAllowed(false);
        jtPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtPessoaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtPessoa);

        jtCarro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Placa", "Modelo", "Data Fabricação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCarro.getTableHeader().setReorderingAllowed(false);
        jtCarro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtCarroMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtCarro);

        jtLigacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Rg", "Placa", "Modelo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtLigacao.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jtLigacao);

        btVincular.setText("Vincular Carro ao dono");
        btVincular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVincularActionPerformed(evt);
            }
        });

        btExluir.setText("Excluir Vinculo");
        btExluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExluirActionPerformed(evt);
            }
        });

        txtNome.setBackground(new java.awt.Color(240, 240, 240));
        txtNome.setEnabled(false);
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jLabel2.setText("RG");

        txtRG.setBackground(new java.awt.Color(240, 240, 240));
        txtRG.setEnabled(false);

        jLabel3.setText("Placa");

        txtPlaca.setBackground(new java.awt.Color(240, 240, 240));
        txtPlaca.setEnabled(false);
        txtPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlacaActionPerformed(evt);
            }
        });

        jLabel4.setText("Modelo");

        txtModelo.setBackground(new java.awt.Color(240, 240, 240));
        txtModelo.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btVincular, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btExluir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2)
                                        .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                        .addComponent(txtRG))
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(txtModelo, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(txtPlaca))
                                .addGap(72, 72, 72)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btVincular, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btExluir, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExluirActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jtLigacao.getModel();
        List<CarroDono> list = new ArrayList<CarroDono>();
        ArrayList<CarroDono> nova_list = new ArrayList<CarroDono>();
        linha = jtLigacao.getSelectedRow();
        Object valor = modelo.getValueAt(linha, 0);
        list = arqin.getTodasCarroDono();

        for (int i = 0; i < list.size(); i++) {
            if (!(list.get(i).getNomeDono().equals(valor))) {
                nova_list.add(list.get(i));
            }
        }
        try {
            arqout.recadastrar_todos(nova_list);
        } catch (IOException ex) {
            Logger.getLogger(CadastroPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }

        modelo.removeRow(linha);
        JOptionPane.showMessageDialog(null, "Venda apagado com sucesso");

        limpar();
        
        
        int cont = 1;

        List<CarroDono> listalig = new ArrayList<CarroDono>();

        listalig = arqin.getTodasCarroDono();
        DefaultTableModel modelocarrodono = (DefaultTableModel) jtLigacao.getModel();

        for (int i = jtPessoa.getRowCount() - 1;
                i >= 0; --i) {
            modelocarrodono.removeRow(i);
        }

        for (int i = 0;
                i < listalig.size();
                i++) {
            modelocarrodono.addRow(listalig.get(i).getcarrodono());   
            cont++;
        }
    }//GEN-LAST:event_btExluirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        int cont = 1;

        List<CarroDono> listalig = new ArrayList<CarroDono>();

        listalig = arqin.getTodasCarroDono();
        DefaultTableModel modelocarrodono = (DefaultTableModel) jtLigacao.getModel();

        for (int i = jtLigacao.getRowCount() - 1;
                i >= 0; --i) {
            modelocarrodono.removeRow(i);
        }

        for (int i = 0;
                i < listalig.size();
                i++) {
            modelocarrodono.addRow(listalig.get(i).getcarrodono());   
            cont++;
        }
        
   

        int cont2 = 1;

        List<Pessoa> listapess = new ArrayList<Pessoa>();

        listapess = arqin2.getTodasPessoas();
        DefaultTableModel modelopeople = (DefaultTableModel) jtPessoa.getModel();

        for (int i = jtPessoa.getRowCount() - 1;
                i >= 0; --i) {
            modelopeople.removeRow(i);
        }

        for (int i = 0;
                i < listapess.size();
                i++) {
            modelopeople.addRow(listapess.get(i).getpessoa());
            cont2++;
        }
        
        int cont3 = 1;

        List<Automovel> listacar = new ArrayList<Automovel>();

        listacar = arqin3.getTodosCarros();
        DefaultTableModel modelocarro = (DefaultTableModel) jtCarro.getModel();

        for (int i = jtCarro.getRowCount() - 1; i >= 0; --i) {
            modelocarro.removeRow(i);
        }

        for (int i = 0; i < listacar.size(); i++) {
            modelocarro.addRow(listacar.get(i).getcarro());
            cont3++;
        }
    }//GEN-LAST:event_formWindowOpened

    private void btVincularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVincularActionPerformed
        lig = new CarroDono();
        lig.setNomeDono(txtNome.getText());
        lig.setRg(txtRG.getText());
        lig.setPlaca(txtPlaca.getText());
        lig.setModelo(txtModelo.getText());
        
        try {
            arqout.Adicionar(lig);
        } catch (IOException ex) {
            Logger.getLogger(CadastroCarroDono.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

        JOptionPane.showMessageDialog(
                null, "Compra realizada com sucesso!");

        limpar();
        
         int cont = 1;

        List<CarroDono> listalig = new ArrayList<CarroDono>();

        listalig = arqin.getTodasCarroDono();
        DefaultTableModel modelocarrodono = (DefaultTableModel) jtLigacao.getModel();

        for (int i = jtLigacao.getRowCount() - 1;
                i >= 0; --i) {
            modelocarrodono.removeRow(i);
        }

        for (int i = 0;
                i < listalig.size();
                i++) {
            modelocarrodono.addRow(listalig.get(i).getcarrodono());   
            cont++;
        }
         
    }//GEN-LAST:event_btVincularActionPerformed

    private void jtPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtPessoaMouseClicked
        // TODO add your handling code here:
        
        linha = jtPessoa.getSelectedRow();

        txtNome.setText(jtPessoa.getValueAt(linha, 0).toString());
        txtRG.setText(jtPessoa.getValueAt(linha, 1).toString());
       
    }//GEN-LAST:event_jtPessoaMouseClicked

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlacaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlacaActionPerformed

    private void jtCarroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCarroMouseClicked
       linha = jtCarro.getSelectedRow();

       txtPlaca.setText(jtCarro.getValueAt(linha, 0).toString());
       txtModelo.setText(jtCarro.getValueAt(linha, 1).toString());
    }//GEN-LAST:event_jtCarroMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       Principal princ = new Principal();
        princ.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCarroDono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCarroDono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCarroDono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCarroDono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCarroDono().setVisible(true);
            }
        });
    }
    private void limpar(){
     txtNome.setText("");
     txtRG.setText("");
     txtPlaca.setText("");
     txtModelo.setText("");
    
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExluir;
    private javax.swing.JButton btVincular;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtCarro;
    private javax.swing.JTable jtLigacao;
    private javax.swing.JTable jtPessoa;
    private javax.swing.JFormattedTextField txtModelo;
    private javax.swing.JFormattedTextField txtNome;
    private javax.swing.JFormattedTextField txtPlaca;
    private javax.swing.JFormattedTextField txtRG;
    // End of variables declaration//GEN-END:variables
}
